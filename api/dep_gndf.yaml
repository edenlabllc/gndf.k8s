apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: gndf
  name: api
  labels:
    app: "api"
    version: "1.1.4"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "api"
  template:
    metadata:
      labels:
        app: "api"
        version: "1.1.4"
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "gndf-api-init",
                "image": "edenlabllc/gandalf.api:1.1.4",
                "imagePullPolicy": "IfNotPresent",
                "command": ["/bin/sh", "-c"],
                "args": ["cp -r /app /tmp && chmod -R 777 /tmp/app"],
                "volumeMounts": [{
                  "name": "shared-app",
                  "mountPath": "/tmp/app"
                }]
            }
        ]'
    spec:
      containers:
      - name: gndf-api
        image: edenlabllc/gandalf.api:1.1.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
          protocol: TCP
        env:
        - name: APP_ENV
          value: "prod"
        - name: DB_CONNECTION
          value: "mongodb"
        - name: DB_HOST
          value: "db-svc"
        - name: DB_PORT
          value: "27017"
        - name: DB_DATABASE
          value: "gndf"
        - name: DB_USERNAME
          value: ""
        - name: DB_PASSWORD
          value: ""
        - name: APP_DEBUG
          value: "false"
        - name: TOKEN_ADMIN_PW
          value: ";W~^:|=!;k_~.l3^QQ:_WE"
        - name: TOKEN_CONSUMER_PW
          value: "Cd_%_|wz2LG%C~|!yb03=u"
      - name: gndf-nginx
        image: nginx:1.11.10-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d
        - name: shared-app
          mountPath: /app
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-api-gndf
        - name: shared-app
          emptyDir: {}